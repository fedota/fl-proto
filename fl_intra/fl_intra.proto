syntax = "proto3";

package flIntra;

// Sending client count to Coordinator
message ClientCount {
	uint32 count = 1;
    uint32 id = 2;
}

message Empty {
}

// Chunk of bytes
message Chunk {
	bytes content = 1;
}

// Type of Fl Data
enum Type {
	FL_CHECKPOINT_UPDATE = 0;
	FL_RECONN_TIME = 1;
	FL_CHECKPOINT_WEIGHT = 2; 
}

message FlData {
	Chunk message = 1;
	int64 intVal =  2;
	Type type = 3;
}

message FlClientStatus {
	bool accepted = 1;
}

// Service for intra server co-ordination
service FlIntra {
	rpc ClientCountUpdate(ClientCount) returns (FlClientStatus) {}
	rpc Update(stream FlData) returns (FlData) {}
}

// Service for broadcasting info from co-ordinator to other servers
service FLGoalCountBroadcast {
	rpc GoalCountReached(Empty) returns (Empty) {}
}